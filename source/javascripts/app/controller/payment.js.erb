app.votolegal.controller("PaymentController", [
	"$scope",
	"$http",
	"$sce",
	"serialize",
	"auth_service",
	"payment_pagseguro",
	"session_pagseguro",
	"SweetAlert",
	"trouble",
	"$route",
	"$location",
	"SweetAlert",

	function (
		$scope,
		$http,
		$sce,
		serialize,
		auth_service,
		payment_pagseguro,
		session_pagseguro,
		SweetAlert,
		trouble,
		$location,
		SweetAlert
	) {
		if (JSON.parse(localStorage.getItem("user") == null) && localStorage.getItem("userId") == null) {
			document.location = "/";
		}

		$scope.user = JSON.parse(localStorage.getItem("user")) || localStorage.getItem("userId");

		$scope.userIdDefined = ($scope.user.id) ? $scope.user.id : $scope.user;

		$scope.method = "";
		$scope.userCardData = {
			name: '',
			email: '',
			cpf: '',
			cardNumber: '',
			monthCardExpire: '',
			yearCardExpire: '',
			cvvCard: '',
		};

		$scope.BrandCard = '';
		$scope.senderHash = '';
		$scope.formDisable = true;
		$scope.formDisable = [],
		$scope.error_list = [],



		$scope.getSessionId = function () {
			return new Promise(function (resolve) {
				var res = localStorage.getItem("userId");
				resolve(session_pagseguro.getSessionId(res))
				return sessionId;

			})
		}
		$scope.SetSessionId = function (id) {
			return new Promise(function (resolve) {
				resolve(PagSeguroDirectPayment.setSessionId(id))

			})
		}
		$scope.getSenderHash = function () {
			return new Promise(function (resolve) {
				resolve(PagSeguroDirectPayment.getSenderHash())
			})
		}

		//Start session
		$scope.getSessionId()
			.then(function (val) {
				$scope.SetSessionId(val.data.id)
					.then(function () {
						$scope.getSenderHash()
					})
			})

		$scope.brandCards = function () {
			return PagSeguroDirectPayment.getBrand({
				cardBin: $scope.userCardData.cardNumber,
				success: function (response) {
					return response;
				},
				error: function (response) {
					console.log(response, 'erro brands in erro ')
				},
				complete: function (response) {

				console.log(response, 'erro brands in complete')
					window.vLcardBrand = response;
					getBrandCard(response).then(function (res) {
						$scope.createCardToken(res)
					});
				}
			});
		}
		getBrandCard = function (res) {
			return new Promise(function (resolve) {
				resolve(res);
			})
		}

		$scope.createCardToken = function (brand) {

			PagSeguroDirectPayment.createCardToken({
				cardNumber: $scope.userCardData.cardNumber,
				brand: window.vLcardBrand,
				cvv: $scope.userCardData.cvvCard,
				expirationMonth: $scope.userCardData.monthCardExpire,
				expirationYear: $scope.userCardData.yearCardExpire,
				success: function (reponse) {
					console.log(response)

				},
				error: function () {

				},
				complete: function (response) {

					var userId = localStorage.getItem("userId");
					var hash = PagSeguroDirectPayment.getSenderHash()
					payment_pagseguro.payment(userId, hash, tokenCard)

				},
			});
		}

		$scope.submit = function (form) {

		console.log(form, 'form')
				$scope.brandCards()


			if (form.$invalid == true) {

				var error = form.$error.required;
				var element = '';

				error.map(function(e){


					element = document.querySelector('form[name=pagamento] *[name='+e.$name+']');
					//element = document.querySelector('form[name=pagamento] *[name=name]');

					var t  = Array.from(element)
					t.map(function(e){
						console.log(e.value, 'dd')

					})


					//console.log(element.value, 'valeu')

					var name = element.attributes['placeholder'].value;
					$scope.error_list.push(name);

					//console.log(element, 'elemnt')

				})




/*
# 				for(var field in error){
# console.log('ddddd', field)

#

# 		console.log(t, 'reorno')

# 					//ar name = f(field).attributes['placeholder'].value;
# 					// $scope.error_list.push(name + error_msg(res[field]));

# 					}

*/

			}else{
				$scope.brandCards()
			}


		}

	}]);
