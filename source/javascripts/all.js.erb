(function(app){

  /**
   * Array map polyfill
   */
  if (!Array.prototype.map) {
    Array.prototype.map = function(callback, thisArg) {
      var T, A, k;
      if (this == null) throw new TypeError(' this is null or not defined');
      var O = Object(this);
      var len = O.length >>> 0;
      if (typeof callback !== 'function') throw new TypeError(callback + ' is not a function');
      if (arguments.length > 1) T = thisArg;
      A = new Array(len);
      k = 0;
      while (k < len) {
        var kValue, mappedValue;
        if (k in O) {
          kValue = O[k];
          mappedValue = callback.call(T, kValue, k, O);
          A[k] = mappedValue;
        }
        k++;
      }
      return A;
    };
  }

  /**
   * Serializer
   */
  var Serializer = function(){
    this.from_object = function(data){
      var buffer = [];
      
      if (typeof data !== 'object')
        throw new Error('Param to be serializer isnt a object');
      
      for (var name in data) {
        if (!data.hasOwnProperty(name)) {
          continue;
        }
        var value = data[name];
        buffer.push(
          encodeURIComponent(name) + "=" +
          encodeURIComponent( ( value == null ) ? "" : value )
        );
      }

      return buffer.join( "&" ).replace(/%20/g, "+");
    };

    this.from_form = function(element_id){
      var f = document.forms[element_id];
      
      var buffer = {};
      for(var i in f.elements){
        if(f.elements[i].type !== undefined)
          buffer[f.elements[i].name] = f.elements[i].value;
      }
      return this.from_object(buffer);
    };

    this.to_json = function(data){
      return JSON.stringify(data);
    };
  };



  /**
   * VotoLegal Project App
   */
  app.votolegal = angular.module('votolegal', ['ngMask', 'ngSanitize', 'angular-storage', 'idf.br-filters']);
  app.votolegal.config(['$httpProvider', '$locationProvider', function($httpProvider, $locationProvider) {
    // http configurations
    delete $httpProvider.defaults.headers.common["X-Requested-With"];
    $httpProvider.defaults.headers.common["Content-Type"] = 'application/x-www-form-urlencoded';

    // location configurations
    $locationProvider.html5Mode(true);
  }]);

  /**
   * Show String as HTML
   */
  app.votolegal.filter('unsafe', ['$sce', function($sce){
    return function(val){ return $sce.trustAsHtml(val) };
  }]);

  /**
   * Postmon Service
   * Connect to the Postmon service API to get zipcode informations
   */ 
  app.votolegal.factory('postmon', ['$http', function($http){
    return function(zipcode) {
      return $http.get('//api.postmon.com.br/v1/cep/' + zipcode, {cache: false});
    }
  }]);

  /**
   * Serializer Service
   */ 
  app.votolegal.factory('serialize', function(){ return new Serializer() });


  /**
   * Authentication Service
   */ 
  app.votolegal.factory('auth_service', ['$http', 'serialize', 'store', function($http, serialize, store){ 
    return {
      // attributes
      session_key: 'user',
      sign_page: '/admin/signin',
      admin_page: '/admin',

      // methods
      authenticate: function(username, password) {
        return $http({
          method: 'POST',
          url: '<%= config[:api_host] %>/login',
          data: serialize.from_object({"email": username, "password": password}),
          headers: {'Content-Type': 'application/x-www-form-urlencoded'}
        });
      },

      // store wrapper
      session: function(){
        return store;
      },

      // load user data
      current_user: function(){
        return this.session().get(this.session_key);
      },

      // validate user
      validate_user: function(opts){
        var user = this.current_user();
        if(document.location.href.indexOf(this.sign_page) == -1){
          // not signin page and not user signed in -> redirect to signin page
          if(user == undefined) document.location = this.sign_page;
        }
        else {
          // signin page and user signed in -> redirect to admin page
          if(user != undefined) document.location = this.admin_page;
        }
        return false;
      }
    }
  }]);


  // load votolegal controllers
  <%= partial "javascripts/app/controller/pre-cadastro.js" %>
  <%= partial "javascripts/app/controller/contato.js" %>
  <%= partial "javascripts/app/controller/faq.js" %>
  <%= partial "javascripts/app/controller/auth.js" %>
  <%= partial "javascripts/app/controller/dashboard.js" %>
  <%= partial "javascripts/app/controller/pre-candidate.js" %>

})(window.app = window.app || {});
